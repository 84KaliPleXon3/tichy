			  Tichy coding style

Tichy follows the python codding style defined by Guido van Rossum in
PEP0008 : http://www.python.org/dev/peps/pep-0008/ (The only
difference being that sometime I think lines over 80 characters are
better than having long breaked line)

Anybody contributing to tichy : please read this document carefully !

			      == Also ==

never use the 'import *' form, except if it is really the only choice.

Try to avoid importing object from module. e.g :

OK:
    import my_module
    class A(my_module.T):
        pass
    
BAD:
    from my_module import T
    class A(T):
        pass
    
Never ever use global variables, except if there are really no other
choices, and then make the variable private (with a leading
underscore)

Use list comprehension instead of loops if possible

Use properties instead of get_ and set_ methods.

Use nested functions when a function is only used by an other
functions. That is, don't pollute the namespace of a class or a module
by functions that are not used at this scope.

Use the python logging module for logging and debuging
informations. Never put 'print' in your code, and NEVER use syslog
module or even worst create your own LOG function.

NEVER EVER optimize your pyton code, except if you are sure that it
makes sense, and only optimize as less as possible. If something is
too slow, then try to use an already existing python module.

Every function that is longer than 20 lines is probably messy and
should be reconsidered. (Except in case the function is just a long
list of attributes setting or a switch cases.

When committing using git, prefix the description by the name of the
module that is being modified, followed by a colon. Then one blank
line followed by the description of the commit.
