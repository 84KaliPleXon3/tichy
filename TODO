== TODO List for TICHY ==

== Package ==
If I try to install tichy on OM, I get several error :
  - python-pygobject package missing 
  - python-pygame package missing
  - python-pygame image doesn't work : there is a bug in the bb file. Easy to fix !
  
== Framework ==
- Update tichy GSM service to use the new framework API, see how it is done in zhone...

== General ==
- *** Get ride of SVN before it is too late. Git is much better ***
- Add an Evas backend for the gui
    I am already working on it, It is not totally working so far, but I am getting there I think - Guillaume
- Add clutter backend (This is not compulsory, but would be nice to have)
- Also a ncurses backend could be cool.
- Have a way to tag Items as 'debug', The 'debug' items are only registered in debug mode (or via the configurations maybe).
- Use a system font, instead of having two big font files in the plugin/styles directory
    (but we have to make sure it works on desktop and Neo)
- Why is it so slow when we have a list of actor view and we select on and then an other ?
    
== Marketing ==
- *** Make a website, with a wiki, news, screenshots, and the documentation ***

== Look & Feel ==
- Get more icons (specially for the sections in the config plugin)
    The icons from tango desktop are actually not too bad...
- *** Let guip and guic widgets be able to get there size from the style ***
- Find a proper font, that has chinese characters
- *** Redo the keyboard. It is unusable as it is now : too small, too slow !! ***

== re-factoring ==

== guip and guic ==
- replace 'expandable' attribute by 'expand', to follow gtk.
- Create a few new widgets (controls, alignment, spins)
- Label.optimal_size should be automatically computed when we change the text
  For the moment I do it a very stupid way (see the label implementation)
- Put Box.border, Box.space in the style (may need some more work first)

== code quality ==
- Add more comments. Choose a style for the docstrings (I remember a nice python PEP on this)
- Have the doc autogenerated
- Add a way to test the plugins :
    What I would like to have is a way for every plugin to define some unittest, the test would be run on start only if we start tichy in debug mode.


